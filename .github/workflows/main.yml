# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cd /home/ubuntu
          [ ! -d DCEDoc ] && mkdir -p DCEDoc
          cd camera-enhancer-docs && git pull && cd .. && cp -rfp ./camera-enhancer-docs/* ./DCEDoc/
          cd Docs-Template-Repo && git pull && cd .. && cp -rfp ./Docs-Template-Repo/* ./DCEDoc/
          cd DCEDoc && bundle exec jekyll build
          #FIND_CONDITION="-type f"
          #./BuildDoc2.0_v4.sh $GITHUB_WORKSPACE $GITHUB_WORKSPACE/_site /home/ubuntu/tempgh Docs-Template-Repo
          
      - name: FTP Deploy
      # You may pin to the exact commit or the version.
      # uses: SamKirkland/FTP-Deploy-Action@d2724c6194d42ae5d4d042070d51d23cbc6ad83f
        env: 
          USERPWD: ${{ secrets.USERPWD }}
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          # ftp server
          server: www.dynamsoft.com
          # ftp username
          username: WebsiteAutorelease
          # ftp password
          password: $USERPWD
          # Server port to connect to (read your web hosts docs)
          #port: # optional
          # protocol to deploy with - ftp, ftps, or ftps-legacy
          protocol: ftp
          # Folder to upload from, must end with trailing slash /
          local-dir: /home/ubuntu/DCEDoc/_site/
          # Path to upload to on the server. Must end with trailing slash /
          server-dir: /www.dynamsoft.com/camera-enhancer/docs/tempdd/
          # Path and name of the state file - this file is used to track which files have been deployed
          #state-name: # optional
          # Prints which modifications will be made with current config options, but doesnt actually make any changes
          #dry-run: # optional
          # Deletes ALL contents of server-dir, even items in excluded with exclude argument
          #dangerous-clean-slate: # optional
          # An array of glob patterns, these files will not be included in the publish/delete process
          #exclude: # optional
          # How verbose should the information be - minimal, standard, or verbose
          #log-level: # optional
          # strict or loose
          #security: # optional

